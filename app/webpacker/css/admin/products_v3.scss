// Customisations for the new Bulk Edit Products page only
.products_v3_page {
  #content > .row:first-child > .container:first-child {
    // Allow table to extend to full width of available screen space
    // TODO: move this to a generic rule, eg body.full-width{}. Then it can be included on any page.
    //       or even better, create a switch that allows you to yield the page content without the surrounding content class. then you still have control to add the .content div where needed.
    max-width: none;
  }

  #products-content > .container:first-child {
    position: static;
  }

  #products-content .container {
    padding: 0;
  }

  .results {
    position: relative;
  }

  // Form actions floats over other controls when active
  .form-actions {
    position: absolute;
    top: -1em;
    left: 0;
    right: 0;
    z-index: 1; // Ensure tom-select and .disabled-section are covered
  }

  // Hopefully these rules will be moved to component(s).
  table.products {
    table-layout: fixed; // Column widths are based solely on col definitions (not content). This allows more efficient rendering.

    background-color: $color-tbl-bg;
    padding: 4px;
    border-collapse: separate; // This is needed for the outer padding. Also should be helpful to give more flexibility of borders between rows.

    // Additional horizontal padding to align with input contents
    thead th.with-input {
      padding-left: $padding-tbl-cell + $hpadding-txt;
      padding-right: $padding-tbl-cell + $hpadding-txt;
    }

    // Row hover
    tr:hover {
      td {
        background-color: $light-grey;
        position: relative;

        // Left border
        &:first-child:before {
          content: "";
          position: absolute;
          top: 0;
          left: -4px;
          border-left: 4px solid $teal;
          height: 100%;
        }
      }
    }

    th,
    td {
      vertical-align: top;
      padding: $padding-tbl-cell;
      border: none;

      .content {
        // Plain content fields need help to align with text in inputs (due to vertical-align)
        margin: $vpadding-txt + 1px 0;

        @extend .line-clamp-1;
      }
    }

    th {
      // Clip long content in headers, but allow wrapping
      overflow: hidden;
      text-overflow: clip; // If colums are so small that headers are clipping, ellipsis are more of a hindrance
    }

    td {
      background-color: $color-tbl-cell-bg;
    }

    // "Relaxed" row groups, containing condensed rows.
    //
    // `display:table` enforces strict rules and won't allow border styles on tbody.
    // So we emulate group styles on the cells themselves.
    .relaxed {
      th,
      td {
        padding: $padding-tbl-cell-relaxed;
      }

      td {
        border-bottom: 2px solid $color-tbl-bg;
      }

      tr:first-child td {
        border-top: 4px solid $color-tbl-bg;
      }
      tr:last-child td {
        border-bottom: 1px solid $color-tbl-cell-shadow;
      }
    }

    // "Condensed" rows
    .condensed {
      td,
      th {
        padding: $padding-tbl-cell-condensed;
      }
    }

    // "Naked" inputs. Row hover helps reveal them.
    input {
      border-color: transparent;
      background-color: $color-tbl-cell-bg;
      height: auto;
      font-size: inherit;
      font-weight: inherit;

      &:focus {
        border-color: $color-txt-hover-brd;
      }

      &.changed {
        border-color: $color-txt-changed-brd;
      }
    }

    .field_with_errors {
      input {
        border-color: $color-error;
      }
    }
  }

  #no-products {
    margin-top: 1em;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    font-size: $h6-size;
    font-weight: 600;
    gap: 20px;
    margin-top: 116px;

    #no-products-actions {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 20px;
    }
  }

  #sort {
    margin-bottom: 1em;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  #sort {
    line-height: $btn-relaxed-height;
    height: $btn-relaxed-height;

    .with-dropdown {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 10px;
    }
  }

  #filters {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: 1fr;
    grid-column-gap: 20px;
    align-items: end;
    margin-bottom: 20px;

    .query {
      grid-column: 1 / span 3;
    }

    .producers,
    .categories {
    }

    .submit {
      grid-column: 6 / span 1;
    }

    .query {
      .search-input {
        width: 100%;
        position: relative;
        background-color: $lighter-grey;
        border: 1px solid $lighter-grey;
        border-radius: 4px;
        height: $btn-relaxed-height;
        line-height: $btn-relaxed-height;

        &:has(input:focus),
        &:has(input:active) {
          border: 1px solid $dark-blue;
        }

        > input {
          // Totally hide the input from its container
          background-color: transparent;
          border: none;
          width: calc(100% - 30px); // 30px is the width of the search icon + padding
        }

        &:before {
          font-family: FontAwesome;
          content: "\f002";
          color: $near-black;
          font-size: 16px;
          margin-left: 10px;
        }
      }
    }

    .producers,
    .categories {
      select {
        width: 150px;
        height: $btn-relaxed-height;
      }
    }

    .submit {
      text-align: right;

      .search-button {
        position: relative;
        > input {
          padding-left: 30px;
        }
      }
    }
  }

  // Blurred and non-clickable
  $disabled-blur: 1.5px;
  .disabled-section {
    position: relative;

    &::after {
      content: "";
      position: absolute;
      backdrop-filter: blur($disabled-blur);
      // Stretch outside for a soft blur edge:
      left: -$disabled-blur;
      top: -$disabled-blur;
      bottom: -$disabled-blur;
      right: -$disabled-blur;
      z-index: 1; // Ensure tom-select is covered
    }
  }
}
